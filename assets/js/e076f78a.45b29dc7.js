"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3619],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>f});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),d=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},p=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(a),f=r,c=m["".concat(s,".").concat(f)]||m[f]||u[f]||i;return a?t.createElement(c,l(l({ref:n},p),{},{components:a})):t.createElement(c,l({ref:n},p))}));function f(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6858:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=a(7462),r=(a(7294),a(3905));const i={},l="Reshaping",o={unversionedId:"dataframe/reshaping",id:"dataframe/reshaping",title:"Reshaping",description:"You can reshape a DataFrame object using these functions.",source:"@site/docs/dataframe/reshaping.md",sourceDirName:"dataframe",slug:"/dataframe/reshaping",permalink:"/docs/dataframe/reshaping",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Sorting",permalink:"/docs/dataframe/sorting"},next:{title:"Introduction",permalink:"/docs/index/introduction"}},s={},d=[{value:"Pivot",id:"pivot",level:2},{value:"PivotTable",id:"pivottable",level:2},{value:"Melt",id:"melt",level:2},{value:"GroupBy",id:"groupby",level:2}],p={toc:d};function u(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reshaping"},"Reshaping"),(0,r.kt)("p",null,"You can reshape a ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," object using these functions."),(0,r.kt)("p",null,"The data used in the example ",(0,r.kt)("inlineCode",{parentName:"p"},"neo_v2.csv")," is NASA's list of Nearest Earth Objects, sourced from ",(0,r.kt)("a",{parentName:"p",href:"https://www.kaggle.com/datasets/sameepvani/nasa-nearest-earth-objects"},"Kaggle"),"."),(0,r.kt)("h2",{id:"pivot"},"Pivot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (df *DataFrame) Pivot(column, value string) (DataFrame, error)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Pivot")," returns an organized ",(0,r.kt)("inlineCode",{parentName:"p"},"Dataframe")," that has values corresponding to the index and the given column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'df, err := gambas.ReadCsv(filepath.Join(".", "neo_v2.csv"), []string{"id"})\nif err != nil {\n     fmt.Println(err)\n}\ndf.Head(5)\nfmt.Println("")\n\nres, err := df.Pivot("hazardous", "est_diameter_min")\nif err != nil {\n     fmt.Println(err)\n}\n\nres.Head(5)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"id         |    id         name                   est_diameter_min    est_diameter_max    relative_velocity    miss_distance            orbiting_body    sentry_object    absolute_magnitude    hazardous    \n2162635    |    2162635    162635 (2000 SS164)    1.1982708007        2.6794149658        13569.2492241812     5.483974408284605e+07    Earth            false            16.73                 false        \n2277475    |    2277475    277475 (2005 WK4)      0.2658              0.5943468684        73588.7266634981     6.143812652395093e+07    Earth            false            20                    true         \n2512244    |    2512244    512244 (2015 YE18)     0.7220295577        1.6145071727        114258.6921290512    4.979872494045679e+07    Earth            false            17.83                 false        \n3596030    |    3596030    (2012 BV13)            0.096506147         0.2157943048        24764.3031380016     2.543497272075825e+07    Earth            false            22.2                  false        \n3667127    |    3667127    (2014 GE35)            0.2550086879        0.5702167609        42737.7337647264     4.627556700130072e+07    Earth            false            20.09                 true         \n\nid         |    false           true            \n2162635    |    1.1982708007    NaN             \n2277475    |    NaN             0.2658          \n2512244    |    0.7220295577    NaN             \n3596030    |    0.096506147     NaN             \n3667127    |    NaN             0.2550086879    \n")),(0,r.kt)("h2",{id:"pivottable"},"PivotTable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (df *DataFrame) PivotTable(index, column, value string, aggFunc StatsFunc) (DataFrame, error)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PivotTable")," rearranges the data by a given ",(0,r.kt)("inlineCode",{parentName:"p"},"index")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"column"),"."),(0,r.kt)("p",null,"Each value will be aggregated via an aggregation function. Pick three columns from the ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame"),", each to serve as the ",(0,r.kt)("inlineCode",{parentName:"p"},"index"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"column"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),". "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PivotTable")," ignores ",(0,r.kt)("inlineCode",{parentName:"p"},"NaN")," values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'df, err := gambas.ReadCsv(filepath.Join(".", "neo_v2.csv"), nil)\nif err != nil {\n     fmt.Println(err)\n}\ndf.SortByValues("id", true)\ndf.Head(12)\nfmt.Println("")\n\nres, err := df.PivotTable("id", "hazardous", "miss_distance", gambas.Mean)\nif err != nil {\n     fmt.Println(err)\n}\n\nres.Head(5)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"         |    id         name                      est_diameter_min    est_diameter_max    relative_velocity    miss_distance             orbiting_body    sentry_object    absolute_magnitude    hazardous    \n12709    |    2000433    433 Eros (A898 PA)        23.0438466577       51.5276075896       15884.2526231559     5.468807778293672e+07     Earth            false            10.31                 false        \n37651    |    2000433    433 Eros (A898 PA)        23.0438466577       51.5276075896       21402.705247412      2.6729521135077037e+07    Earth            false            10.31                 false        \n56533    |    2000433    433 Eros (A898 PA)        23.0438466577       51.5276075896       21761.7034264303     3.120591927495648e+07     Earth            false            10.31                 false        \n1847     |    2000719    719 Albert (A911 TB)      2.0443487103        4.5713026859        27551.5971939875     4.258288106079324e+07     Earth            false            15.57                 false        \n36418    |    2001036    1036 Ganymed (A924 UB)    37.8926498379       84.7305408852       51496.9232928228     5.3721237819369085e+07    Earth            false            9.23                  false        \n13527    |    2001566    1566 Icarus (1949 MA)     1.4274305148        3.1918316641        76768.6272477926     5.1882752851231776e+07    Earth            false            16.35                 true         \n17077    |    2001566    1566 Icarus (1949 MA)     1.4274305148        3.1918316641        136986.6291056903    4.442794284496872e+07     Earth            false            16.35                 true         \n28226    |    2001566    1566 Icarus (1949 MA)     1.4274305148        3.1918316641        120524.2906272869    6.046637755115862e+07     Earth            false            16.35                 true         \n68073    |    2001566    1566 Icarus (1949 MA)     1.4274305148        3.1918316641        108801.2963741598    8.053781761441007e+06     Earth            false            16.35                 true         \n73540    |    2001566    1566 Icarus (1949 MA)     1.4274305148        3.1918316641        78130.8042822814     6.564713381994684e+07     Earth            false            16.35                 true         \n4156     |    2001580    1580 Betulia (1950 KA)    3.0658787593        6.8555133165        105157.7758512475    3.5573935508316e+07       Earth            false            14.69                 false        \n67943    |    2001580    1580 Betulia (1950 KA)    3.0658787593        6.8555133165        109184.9019317352    5.268620819957744e+07     Earth            false            14.69                 false        \n\nid         |    false               true                \n2000433    |    3.7541172731e+07    NaN                 \n2000719    |    4.2582881061e+07    NaN                 \n2001036    |    5.3721237819e+07    NaN                 \n2001566    |    NaN                 4.6095597766e+07    \n2001580    |    4.4130071854e+07    NaN                 \n")),(0,r.kt)("h2",{id:"melt"},"Melt"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (df *DataFrame) Melt(colName, valueName string) (DataFrame, error)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Melt")," returns the table from wide to long format."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"Melt")," to revert to pre-",(0,r.kt)("inlineCode",{parentName:"p"},"Pivot")," format."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'df, err := gambas.ReadCsv(filepath.Join(".", "neo_v2.csv"), nil)\nif err != nil {\n     fmt.Println(err)\n}\n\npivoted, err := df.PivotTable("id", "hazardous", "miss_distance", gambas.Mean)\nif err != nil {\n     fmt.Println(err)\n}\n\npivoted.Head(5)\nfmt.Println("")\n\nmelted, err := pivoted.Melt("hazardous", "miss_distance")\nif err != nil {\n     fmt.Println(err)\n}\n\nmelted.Head(5)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"id         |    false               true                \n2000433    |    3.7541172731e+07    NaN                 \n2000719    |    4.2582881061e+07    NaN                 \n2001036    |    5.3721237819e+07    NaN                 \n2001566    |    NaN                 4.6095597766e+07    \n2001580    |    4.4130071854e+07    NaN                 \n\nid         |    id         hazardous    miss_distance       \n2000433    |    2000433    false        3.7541172731e+07    \n2000433    |    2000433    true         NaN                 \n2000719    |    2000719    false        4.2582881061e+07    \n2000719    |    2000719    true         NaN                 \n2001036    |    2001036    false        5.3721237819e+07\n")),(0,r.kt)("h2",{id:"groupby"},"GroupBy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (df *DataFrame) GroupBy(by ...string) (GroupBy, error)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GroupBy")," groups selected columns in a ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," object and returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"GroupBy")," object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'df, err := gambas.ReadCsv(filepath.Join(".", "neo_v2.csv"), nil)\nif err != nil {\n     fmt.Println(err)\n}\n\nfiltered, err := df.LocRows([]interface{}{0}, []interface{}{1}, []interface{}{2}, []interface{}{3}, []interface{}{4})\nif err != nil {\n     fmt.Println(err)\n}\n\nfiltered.Print()\nfmt.Println("")\n\ngb, err := filtered.GroupBy("hazardous")\nif err != nil {\n     fmt.Println(err)\n}\n\nres, err := gb.Agg([]string{"relative_velocity"}, gambas.Mean)\nif err != nil {\n     fmt.Println(err)\n}\n\nres.Print()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"     |    id         name                   est_diameter_min    est_diameter_max    relative_velocity    miss_distance            orbiting_body    sentry_object    absolute_magnitude    hazardous    \n0    |    2162635    162635 (2000 SS164)    1.1982708007        2.6794149658        13569.2492241812     5.483974408284605e+07    Earth            false            16.73                 false        \n1    |    2277475    277475 (2005 WK4)      0.2658              0.5943468684        73588.7266634981     6.143812652395093e+07    Earth            false            20                    true         \n2    |    2512244    512244 (2015 YE18)     0.7220295577        1.6145071727        114258.6921290512    4.979872494045679e+07    Earth            false            17.83                 false        \n3    |    3596030    (2012 BV13)            0.096506147         0.2157943048        24764.3031380016     2.543497272075825e+07    Earth            false            22.2                  false        \n4    |    3667127    (2014 GE35)            0.2550086879        0.5702167609        42737.7337647264     4.627556700130072e+07    Earth            false            20.09                 true         \n\nhazardous    |    hazardous    relative_velocity    \nfalse        |    false        50864.081            \ntrue         |    true         58163.23\n")))}u.isMDXComponent=!0}}]);