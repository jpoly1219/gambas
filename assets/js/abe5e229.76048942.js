"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8194],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),d=a,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={},l="CSV",i={unversionedId:"io/csv",id:"io/csv",title:"CSV",description:"ReadCsv",source:"@site/docs/io/csv.md",sourceDirName:"io",slug:"/io/csv",permalink:"/gambas/docs/io/csv",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/gambas/docs/io/introduction"},next:{title:"JSON",permalink:"/gambas/docs/io/json"}},p={},s=[{value:"ReadCsv",id:"readcsv",level:2},{value:"WriteCsv",id:"writecsv",level:2},{value:"Example 1: Include column labels",id:"example-1-include-column-labels",level:3},{value:"Example 2: Skip column labels",id:"example-2-skip-column-labels",level:3}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"csv"},"CSV"),(0,a.kt)("h2",{id:"readcsv"},"ReadCsv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func ReadCsv(pathToFile string, indexCols []string) (DataFrame, error)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ReadCsv")," reads a CSV file and returns a new DataFrame object. It is recommended to generate ",(0,a.kt)("inlineCode",{parentName:"p"},"pathToFile")," using the ",(0,a.kt)("inlineCode",{parentName:"p"},"path/filepath")," package for cross-platform compatibility."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'/*\npeople.csv\n\nName,Age,Height\nAlice,54,163\nBob,26,167\nCharlie,17,175\n*/\n\nmyDf, err := gambas.ReadCsv(filepath.Join(".", "people.csv"), []string{"Name"})\nif err != nil {\n    fmt.Println(err)\n}\n\nmyDf.Print()\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Name       |    Name       Age    Height    \nAlice      |    Alice      54     163       \nBob        |    Bob        26     167       \nCharlie    |    Charlie    17     175   \n")),(0,a.kt)("h2",{id:"writecsv"},"WriteCsv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func WriteCsv(df DataFrame, pathToFile string, skipColumnLabel bool) (os.FileInfo, error)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"WriteCsv")," writes a DataFrame object to CSV file. It is recommended to generate ",(0,a.kt)("inlineCode",{parentName:"p"},"pathToFile")," using the ",(0,a.kt)("inlineCode",{parentName:"p"},"path/filepath")," package for cross-platform compatibility."),(0,a.kt)("p",null,"You can choose whether the output CSV file should contain column labels or not. If you choose to include it, pass ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"skipColumnLabel"),". Otherwise, pass ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h3",{id:"example-1-include-column-labels"},"Example 1: Include column labels"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'myData := [][]interface{}{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\nmyCols := []string{"group a", "group b", "group c"}\nmyIndexCols := []string{"group a"}\n\nmyDf, err := gambas.NewDataFrame(myData, myCols, myIndexCols)\nif err != nil {\n    fmt.Println(err)\n}\n\ngambas.WriteCsv(myDf, filepath.Join(".", "output.csv"), false)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// output.csv\n\ngroup a,group b,group c\n1,4,7\n2,5,8\n3,6,9\n")),(0,a.kt)("h3",{id:"example-2-skip-column-labels"},"Example 2: Skip column labels"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'myData := [][]interface{}{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\nmyCols := []string{"group a", "group b", "group c"}\nmyIndexCols := []string{"group a"}\n\nmyDf, err := gambas.NewDataFrame(myData, myCols, myIndexCols)\nif err != nil {\n    fmt.Println(err)\n}\n\ngambas.WriteCsv(myDf, filepath.Join(".", "output.csv"), true)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// output.csv\n\n1,4,7\n2,5,8\n3,6,9\n")))}m.isMDXComponent=!0}}]);