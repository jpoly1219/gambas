"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1517],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>d});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),s=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(o.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,g=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return r?t.createElement(g,l(l({ref:n},c),{},{components:r})):t.createElement(g,l({ref:n},c))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=u;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var s=2;s<i;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5646:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var t=r(7462),a=(r(7294),r(3905));const i={},l="Printing",p={unversionedId:"series/printing",id:"series/printing",title:"Printing",description:"gambas provides several options to print your Series.",source:"@site/docs/series/printing.md",sourceDirName:"series",slug:"/series/printing",permalink:"/gambas/docs/series/printing",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/gambas/docs/series/introduction"},next:{title:"Indexing",permalink:"/gambas/docs/series/indexing"}},o={},s=[{value:"Print",id:"print",level:2},{value:"PrintRange",id:"printrange",level:2},{value:"Head",id:"head",level:2},{value:"Tail",id:"tail",level:2}],c={toc:s};function m(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"printing"},"Printing"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"gambas")," provides several options to print your ",(0,a.kt)("inlineCode",{parentName:"p"},"Series"),"."),(0,a.kt)("h2",{id:"print"},"Print"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Series) Print()\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Print")," prints all data in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Series")," object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'myData := []interface{}{"apple", "banana", "cherry"}\nmyName := "Fruit"\n\nmySeries, err := gambas.NewSeries(myData, myName, nil)\nif err != nil {\n    fmt.Println(err)\n}\n\nmySeries.Print()\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     |    Fruit     \n0    |    apple     \n1    |    banana    \n2    |    cherry \n")),(0,a.kt)("h2",{id:"printrange"},"PrintRange"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Series) PrintRange(start, end int)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"PrintRange")," prints data in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Series")," object at a given range."),(0,a.kt)("p",null,"Index starts at 0."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'myData := []interface{}{"apple", "banana", "cherry"}\nmyName := "Fruit"\n\nmySeries, err := gambas.NewSeries(myData, myName, nil)\nif err != nil {\n    fmt.Println(err)\n}\n\nmySeries.PrintRange(1, 3)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     |    Fruit     \n1    |    banana    \n2    |    cherry\n")),(0,a.kt)("h2",{id:"head"},"Head"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Series) Head(howMany int)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Head")," prints the first ",(0,a.kt)("inlineCode",{parentName:"p"},"howMany")," items in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Series")," object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'myData := []interface{}{"apple", "banana", "cherry"}\nmyName := "Fruit"\n\nmySeries, err := gambas.NewSeries(myData, myName, nil)\nif err != nil {\n    fmt.Println(err)\n}\n\nmySeries.Head(1)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     |    Fruit     \n0    |    apple  \n")),(0,a.kt)("h2",{id:"tail"},"Tail"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Series) Tail(howMany int)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Tail")," prints the last ",(0,a.kt)("inlineCode",{parentName:"p"},"howMany")," items in a ",(0,a.kt)("inlineCode",{parentName:"p"},"Series")," object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'myData := []interface{}{"apple", "banana", "cherry"}\nmyName := "Fruit"\n\nmySeries, err := gambas.NewSeries(myData, myName, nil)\nif err != nil {\n    fmt.Println(err)\n}\n\nmySeries.Tail(1)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"     |    Fruit     \n2    |    cherry\n")))}m.isMDXComponent=!0}}]);