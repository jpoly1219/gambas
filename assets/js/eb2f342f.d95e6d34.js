"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3037],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),s=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=s(t.components);return a.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),c=s(n),u=r,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||o;return n?a.createElement(g,i(i({ref:e},m),{},{components:n})):a.createElement(g,i({ref:e},m))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6619:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i="Plotting",l={unversionedId:"plotting/plotting",id:"plotting/plotting",title:"Plotting",description:"The data used in the example airqualityno2.csv shows the level of NO2 in Antwep, Paris, and London recorded over a certain time peried, sourced from pandas-dev Github repository.",source:"@site/docs/plotting/plotting.md",sourceDirName:"plotting",slug:"/plotting/",permalink:"/docs/plotting/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/docs/plotting/introduction"},next:{title:"Plotting Options",permalink:"/docs/plotting/plotting-options"}},p={},s=[{value:"Plot",id:"plot",level:2},{value:"PlotN",id:"plotn",level:2}],m={toc:s};function d(t){let{components:e,...o}=t;return(0,r.kt)("wrapper",(0,a.Z)({},m,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"plotting"},"Plotting"),(0,r.kt)("p",null,"The data used in the example ",(0,r.kt)("inlineCode",{parentName:"p"},"air_quality_no2.csv")," shows the level of NO2 in Antwep, Paris, and London recorded over a certain time peried, sourced from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pandas-dev/pandas/blob/main/doc/data/air_quality_no2.csv"},"pandas-dev Github repository"),"."),(0,r.kt)("h2",{id:"plot"},"Plot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func Plot(pd PlotData, setOpts ...GnuplotOpt) error\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Plot")," plots a set of data given by the ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotData")," object ",(0,r.kt)("inlineCode",{parentName:"p"},"pd"),"."),(0,r.kt)("p",null,"Pass in any ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," options you need. Refer to the ",(0,r.kt)("a",{parentName:"p",href:"http://gnuplot.info/docs_5.5/loc9418.html"},"gnuplot documentation")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'df, err := gambas.ReadCsv(filepath.Join(".", "air_quality_no2.csv"), []string{"datetime"})\nif err != nil {\n    fmt.Println(err)\n}\n\nfiltered, err := df.LocCols("datetime", "station_antwerp")\nif err != nil {\n    fmt.Println(err)\n}\n\nerr = filtered.SortByIndex(true)\nif err != nil {\n    fmt.Println(err)\n}\n\npd := gambas.PlotData{\n    Df:       &filtered,\n    Columns:  []string{"datetime", "station_antwerp"},\n    Function: "",\n    Opts:     []gambas.GnuplotOpt{gambas.Using("1:2"), gambas.With("points")},\n}\n\nerr = gambas.Plot(\n    pd,\n    gambas.Setterminal("qt"),\n    gambas.Setxdata("time"),\n    gambas.Settimefmt("%Y-%m-%d %H:%M:%S"),\n    gambas.Setformat(`x "%Y-%m-%d"`),\n    gambas.Setdatafile(`sep ","`),\n    gambas.Setxlabel(`"Date in UTC"`),\n    gambas.Setylabel(`"Value of NO2 in Antwerp"`),\n)\nif err != nil {\n    fmt.Println(err)\n}\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Plot Example 1",src:n(4906).Z,width:"856",height:"643"})),(0,r.kt)("h2",{id:"plotn"},"PlotN"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func PlotN(plotdata []PlotData, setOpts ...GnuplotOpt) error\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PlotN")," plots several ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotData")," objects ",(0,r.kt)("inlineCode",{parentName:"p"},"pd")," in one graph."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotN")," when you want to compare two different datasets, or a dataset with a line of best fit. Refer to the ",(0,r.kt)("a",{parentName:"p",href:"http://gnuplot.info/docs_5.5/loc9418.html"},"gnuplot documentation")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'df, err := gambas.ReadCsv(filepath.Join(".", "air_quality_no2.csv"), []string{"datetime"})\nif err != nil {\n    fmt.Println(err)\n}\n\nerr = df.SortByIndex(true)\nif err != nil {\n    fmt.Println(err)\n}\n\npd1 := gambas.PlotData{\n    Df:       &df,\n    Columns:  []string{"datetime", "station_antwerp"},\n    Function: "",\n    Opts:     []gambas.GnuplotOpt{gambas.Using("1:2"), gambas.With(`lines lc 6 title "Antwerpen"`)},\n}\npd2 := gambas.PlotData{\n    Df:       &df,\n    Columns:  []string{"datetime", "station_paris"},\n    Function: "",\n    Opts:     []gambas.GnuplotOpt{gambas.Using("1:2"), gambas.With(`lines lc 7 title "Paris"`)},\n}\npd3 := gambas.PlotData{\n    Df:       &df,\n    Columns:  []string{"datetime", "station_london"},\n    Function: "",\n    Opts:     []gambas.GnuplotOpt{gambas.Using("1:2"), gambas.With(`lines lc 8 title "London"`)},\n}\n\nerr = gambas.PlotN(\n    []gambas.PlotData{pd1, pd2, pd3},\n    gambas.Setterminal("qt"),\n    gambas.Setxdata("time"),\n    gambas.Settimefmt("%Y-%m-%d %H:%M:%S"),\n    gambas.Setformat(`x "%Y-%m-%d"`),\n    gambas.Setdatafile(`sep ","`),\n    gambas.Setxlabel(`"Date in UTC"`),\n    gambas.Setylabel(`"Value of NO2"`),\n    gambas.Setkey("box width 1 height 1"),\n)\nif err != nil {\n    fmt.Println(err)\n}\n')),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(824).Z,width:"856",height:"643"})))}d.isMDXComponent=!0},4906:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/plot-example-1-a0b00f0e4daa820ea8e5a1954f207852.svg"},824:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/plotn-example-1-9a6424450e3b02504f2ddf4a98f02fe3.svg"}}]);